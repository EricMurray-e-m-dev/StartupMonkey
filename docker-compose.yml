services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: testdb
    ports:
      - "0:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - startupmonkey

  nats:
    image: nats:2.10-alpine
    container_name: startupmonkey_nats
    ports:
      - "0:4222"
    networks:
      - startupmonkey

  analyser:
    build:
      context: ./analyser
      dockerfile: Dockerfile
    environment:
      - NATS_URL=nats://nats:4222
    ports:
      - "0:50051"   # gRPC
      - "0:8081"    # Health check
    depends_on:
      nats:
        condition: service_started
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8081/health"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - startupmonkey
    restart: unless-stopped

  executor:
    build:
      context: ./executor
      dockerfile: Dockerfile
    environment:
      - NATS_URL=nats://nats:4222
    ports:
      - "0:50052"   # gRPC
      - "0:8082"    # Health check
    depends_on:
      nats:
        condition: service_started
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8082/health"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - startupmonkey
    restart: unless-stopped

  collector:
    build:
      context: ./collector
      dockerfile: Dockerfile
    environment:
      - DB_CONNECTION_STRING=postgres://postgres:postgres@postgres:5432/testdb?sslmode=disable
      - DB_ADAPTER=postgres
      - DATABASE_ID=docker-test-db
      - DATABASE_NAME=testdb
      - ANALYSER_ADDRESS=analyser:50051
      - COLLECTION_INTERVAL=30s
    ports:
      - "0:8080"    # Health check
    depends_on:
      postgres:
        condition: service_healthy
      analyser:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8080/health"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - startupmonkey
    restart: unless-stopped

networks:
  startupmonkey:
    driver: bridge